//BOT: Do not delete EVER!

qualif Bot(v:@(0))    : 0 = 1 
qualif Bot(v:obj)     : 0 = 1 
qualif Bot(v:a)       : 0 = 1 
qualif Bot(v:bool)    : 0 = 1 
qualif Bot(v:int)     : 0 = 1 
qualif CmpZ(v:a)      : v [ < ; <= ; > ; >= ; = ; != ] 0
qualif Cmp(v:a,~A:a)  : v [ < ; <= ; > ; >= ; = ; != ] ~A
qualif One(v:int)     : v = 1
qualif True(v:bool)   : (? v) 
qualif False(v:bool)  : ~ (? v) 

qualif Papp(v:a,~P:Pred a) : papp1(~P, v)
constant papp1 : func(2, [Pred @(0); @(1); bool])

qualif Auto(VV : int , ~A0 : int): (VV = ~A0+1)

qualif Auto(VV : Vec a) : (VV = Nil#r9J)
qualif Auto(VV : Vec a,~X:a,~Xs:Vec a) : (VV = Cons#r9J([~X; ~Xs]))




qualif Papp2(v:a,~X:b,~Y:Vec b,~P:Pred a (Vec b)) : papp2(~P, v, Cons#r9J([~X; ~Y]))
qualif Papp2(v:a,~P:Pred a (Vec b)) : papp2(~P, v, Nil#r9J)
qualif Papp2(v:a,~X:b,~P:Pred a b) : papp2(~P, v, ~X)


qualif Papp2(v:a,~X:int,~P:Pred a int) : papp2(~P, v, ~X+1)
qualif Papp2(v:a,~P:Pred a int) : papp2(~P, v, 0)


constant papp2 : func(3, [Pred @(0) @(1); @(2); @(3); bool])
